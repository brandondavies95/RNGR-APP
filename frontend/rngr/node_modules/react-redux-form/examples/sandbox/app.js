import React, { Component } from "react";
import ReactDOM from "react-dom";
import _ from "lodash";

import { createStore, applyMiddleware, combineReducers, compose } from "redux";
import { Provider, connect } from "react-redux";
// import { Form, Control, Errors, combineForms, actions } from 'react-redux-form'
import thunk from "redux-thunk";
import createLogger from "redux-logger";

const logger = createLogger();

import {
  Field,
  Fieldset,
  Errors,
  Control,
  Form,
  LocalForm,
  combineForms,
  actions,
  formReducer,
  modeled,
  controls
} from "react-redux-form";

const initialUserState = {
  firstName: "bad",
};

const middlewares = [
  thunk
];

const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;
const enhancer = composeEnhancers(
  applyMiddleware(...middlewares),
  // other store enhancers if any
);
const store = createStore(
  combineForms({
    user: initialUserState
  }),
  enhancer
);

const isAvailable = function(value, done) {
  return new Promise(function(resolve, reject) {
    setTimeout(function() {
      done(value === "good");
    }, 250);
  });
};

class UserFormImpl extends Component {
  componentDidMount() {
    const { dispatch } = this.props;
    dispatch(actions.asyncSetValidity('user.firstName', isAvailable));
  }

  render() {
    return (
      <Form model="user">
        <div className="field">
          <label>First name:</label>
          <Control.text
            model=".firstName"
            asyncValidators={{
              isAvailable: isAvailable
            }}
            asyncValidateOn="change"
          />
          <Errors
            wrapper="div"
            model=".firstName"
            messages={{isAvailable: "bad"}}
          />
        </div>

        <button type="submit">
          Submit (check console)
        </button>
      </Form>
    );
  }
}

const UserForm = connect((s) => ({}))(UserFormImpl)

class App extends React.Component {
  render() {
    return (
      <Provider store={store}>
        <UserForm />
      </Provider>
    );
  }
}

ReactDOM.render(<App />, document.getElementById("app"));
